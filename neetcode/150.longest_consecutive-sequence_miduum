class Solution {
    /**
     * @param {number[]} nums
     * @return {number}
     */
    longestConsecutive(nums) {
        if (nums.length === 0) {
            return 0;
        }

        // Remove duplicates and sort the array
        const uniqueNumbers = [...new Set(nums)];
        uniqueNumbers.sort((a, b) => a - b);

        // Array to store all consecutive sequences
        let sequences = [];
        let currentSequence = [uniqueNumbers[0]];

        // Iterate through the sorted array
        for (let i = 1; i < uniqueNumbers.length; i++) {
            if (uniqueNumbers[i] === uniqueNumbers[i - 1] + 1) {
              
               currentSequence.push(uniqueNumbers[i])
            } else {
              sequences.push(currentSequence)
              currentSequence = [uniqueNumbers[i]];

            }
        }
        //this need to be manually added, becuase it wont be added cuz no iteration for else part to be excuted
        sequences.push(currentSequence);
        console.log(sequences)
        let longestSequence = sequences.reduce((a, b) => (a.length > b.length ? a : b), []);
        return longestSequence.length;
    }
}


